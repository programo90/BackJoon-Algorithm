import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		
        //결과를 담을 리스트
        List<String> list = new ArrayList<>();
        
        //받은 값 만큼의 1~n 까지 배열 생성
		int[] arr = new int[n];
		for(int i=0; i<n; i++) {
			arr[i] = i+1;
		}
		
        //순열 함수 실행
		perm(arr, 0, m, list);
        
        //List 정렬
		Collections.sort(list);
		
		StringBuilder sb = new StringBuilder();
		for(int i = 0; i<list.size(); i++) {
			sb.append(list.get(i)).append("\n");
		}
		bw.write(sb.toString());
		bw.flush();
		
	}
	
	public static void perm(int[] arr, int d, int m, List<String> list) {
        if(m==d) { //현재 길이 == 깊이 일때는 반복을 멈추고 값을 생성해서 리스트에 저장
			StringBuilder sb= new StringBuilder();
			for(int i=0; i<m; i++) {
				sb.append(arr[i]).append(" ");
			}
			list.add(sb.toString());
		}
		
		for(int i=d; i<arr.length; i++) {
			swap(arr, i, d);
			perm(arr, d+1, m, list);
			swap(arr, i, d);
		}
		
	}
	
	public static void swap(int[] arr, int idx1, int idx2) {
		int temp = arr[idx1];
		arr[idx1] = arr[idx2];
		arr[idx2] = temp;
	}
}